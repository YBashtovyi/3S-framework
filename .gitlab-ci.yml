image: docker:19.03.1

services:
  - name: docker:19.03.1-dind
    #entrypoint: ["env", "-u", "DOCKER_HOST"]
    #command: ["dockerd-entrypoint.sh"]

stages:
  - build
  - deploy
  - autodeploy
  - release
  - notify-on-failure

variables:
  #DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  #BACKEND_TAG: $CI_REGISTRY_IMAGE:backend-$CI_COMMIT_REF_SLUG
  #FRONTEND_TAG: $CI_REGISTRY_IMAGE:frontend-$CI_COMMIT_REF_SLUG
  CI_REGISTRY: $HARBOR_URI
  BACKEND_TAG: $HARBOR_URI/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:backend-$CI_COMMIT_REF_SLUG
  BACKEND_ALPINE_TAG: $HARBOR_URI/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:backend-$CI_COMMIT_REF_SLUG-alpine
  FRONTEND_TAG: $HARBOR_URI/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:frontend-$CI_COMMIT_REF_SLUG
  # See https://github.com/docker-library/docker/pull/166
  DOCKER_TLS_CERTDIR: ""


### BUILD SECTION

build-image-backend:
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    MESSAGE: "<b>IPM backend</b> docker image builded at branch:<b>'$CI_COMMIT_REF_SLUG'</b> ✅\nPush from $GITLAB_USER_EMAIL with commit message: \n$CI_COMMIT_MESSAGE"
  script:
    - apk add --no-cache curl
    - echo $CI_REGISTRY
    - echo $CI_PROJECT_NAMESPACE
    - echo $CI_PROJECT_NAME
    - echo $CI_REGISTRY_IMAGE
    - echo $HARBOR_URI
    - echo $HARBOR_USER
    - echo $HARBOR_PASSWORD
    - echo $TELEGRAM_BOT_TOKEN
    #- echo "168.119.189.48  harhor.bitsoft.group" >> /etc/hosts
    #- docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - echo "$HARBOR_PASSWORD" | docker login -u $HARBOR_USER --password-stdin  $HARBOR_URI
    - docker build --build-arg VERSION_VALUE="$VERSION_MAJOR_VALUE.$VERSION_MINOR_VALUE.$VERSION_RELEASE_VALUE.$VERSION_BUILD_VALUE" -t $BACKEND_TAG .
    - docker push $BACKEND_TAG
    - sh .ci-notify.sh "$MESSAGE"
  only:
    changes:
      - .gitlab-ci.yml
      - submodules/**/*
      - xmldocumentation/**/*
      - src/App.Api/**/*
      - src/App.Business/**/*
      - src/App.Business.Tests/**/*
      - src/App.Data/**/*
      - src/App.DocumentTemplates/**/*
      - Dockerfile
      - "*.sh"
    refs:
      - dev
      - test

build-image-backend-alpine:
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    MESSAGE: "<b>IPM backend</b> docker image builded at branch:<b>'$CI_COMMIT_REF_SLUG'</b> ✅\nPush from $GITLAB_USER_EMAIL with commit message: \n$CI_COMMIT_MESSAGE"
  script:
    - apk add --no-cache curl
    - echo $CI_REGISTRY
    - echo $CI_PROJECT_NAMESPACE
    - echo $CI_PROJECT_NAME
    - echo $CI_REGISTRY_IMAGE
    #- echo "168.119.189.48  harhor.bitsoft.group" >> /etc/hosts
    #- docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - echo "$HARBOR_PASSWORD" | docker login -u $HARBOR_USER --password-stdin  $HARBOR_URI
    - docker build --build-arg VERSION_VALUE="$VERSION_MAJOR_VALUE.$VERSION_MINOR_VALUE.$VERSION_RELEASE_VALUE.$VERSION_BUILD_VALUE" -t $BACKEND_ALPINE_TAG -f Dockerfile.alpine .
    - docker push $BACKEND_ALPINE_TAG
    - sh .ci-notify.sh "$MESSAGE"
  only:
    changes:
      - .gitlab-ci.yml
      - submodules/**/*
      - xmldocumentation/**/*
      - src/App.Api/**/*
      - src/App.Business/**/*
      - src/App.Business.Tests/**/*
      - src/App.Data/**/*
      - src/App.DocumentTemplates/**/*
      - Dockerfile.alpine
      - "*.sh"
    refs:
      - dev
      - test


build-image-frontend:
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    MESSAGE: "<b>IPM frontend</b> docker image builded at branch:<b>'$CI_COMMIT_REF_SLUG'</b> ✅\nPush from $GITLAB_USER_EMAIL with commit message: \n$CI_COMMIT_MESSAGE"
  script:
    - apk add --no-cache curl
    #- docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - echo "$HARBOR_PASSWORD" | docker login -u $HARBOR_USER --password-stdin  $HARBOR_URI
    - docker build --build-arg ENVIRONMENT_CONFIGURATION="$CI_COMMIT_REF_SLUG" -t $FRONTEND_TAG ./src/App.View
    - docker push $FRONTEND_TAG
    - sh .ci-notify.sh "$MESSAGE"
  only:
    changes:
      - .gitlab-ci.yml
      - src/App.View/**/*
    refs:
      - dev
      - test

### AUTODEPLOY SECTION
autodeploy-backend:
  stage: autodeploy
  image: angrydevops/rancher-cli:2.0.4
  variables:
    NAMESPACE: $CI_COMMIT_REF_SLUG-mintrans
    DEPLOYMENT: backend
    CONTEXT: c-w5vrx:p-wscbw
  script:
    - rancher login $RANCHER2_SERVER_URL --token $RANCHER2_BEARER_TOKEN --context $CONTEXT
    - rancher kubectl --insecure-skip-tls-verify=true --namespace=$NAMESPACE patch deployment $DEPLOYMENT -p "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"date\":\"`date +'%s'`\"}}}}}"
  only:
    changes:
      - .gitlab-ci.yml
      - submodules/**/*
      - xmldocumentation/**/*
      - src/App.Api/**/*
      - src/App.Business/**/*
      - src/App.Business.Tests/**/*
      - src/App.Data/**/*
      - src/App.DocumentTemplates/**/*
      - Dockerfile
      - "*.sh"
    refs:
      - dev
      - test
  when: on_success

autodeploy-frontend:
  stage: autodeploy
  image: angrydevops/rancher-cli:2.0.4
  variables:
    NAMESPACE: $CI_COMMIT_REF_SLUG-mintrans
    DEPLOYMENT: frontend
    CONTEXT: c-w5vrx:p-wscbw
  script:
    - rancher login $RANCHER2_SERVER_URL --token $RANCHER2_BEARER_TOKEN --context $CONTEXT
    - rancher kubectl --insecure-skip-tls-verify=true --namespace=$NAMESPACE patch deployment $DEPLOYMENT -p "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"date\":\"`date +'%s'`\"}}}}}"
  only:
    changes:
      - .gitlab-ci.yml
      - src/App.View/**/*
    refs:
      - dev
      - test
  when: on_success

notify-on-failure-to-telegram:
  stage: notify-on-failure
  variables:
    MESSAGE: "Something went wrong ❌\nIn project <b>$CI_PROJECT_NAME</b> and branch: <b>'$CI_COMMIT_REF_SLUG'</b>\nPush from $GITLAB_USER_EMAIL with commit message: \n$CI_COMMIT_MESSAGE\nSee this -> $CI_PROJECT_URL/pipelines/$CI_PIPELINE_ID"
  script:
    - apk add --no-cache curl && sh .ci-notify.sh "$MESSAGE"
  when: on_failure
  only:
    refs:
      - dev
      - test

### RELEASE
release-image-backend:
  stage: release
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    MESSAGE: "<b>IPM backend</b> docker image builded at branch:<b>'$CI_COMMIT_REF_SLUG'</b> ✅\nPush from $GITLAB_USER_EMAIL with commit message: \n$CI_COMMIT_MESSAGE"
    VERSION: 1.0.0
    #RELEASE_BACKEND_TAG: $CI_REGISTRY_IMAGE/backend:$VERSION
    RELEASE_BACKEND_TAG: $HARBOR_URI/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/backend:$VERSION
  script:
    - apk add --no-cache curl
    #- docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    -  echo "$HARBOR_PASSWORD" | docker login -u $HARBOR_USER --password-stdin  $HARBOR_URI
    - docker build --build-arg VERSION_VALUE="$VERSION" -t $RELEASE_BACKEND_TAG -f Dockerfile.production .
    - docker push $RELEASE_BACKEND_TAG
    - sh .ci-notify.sh "$MESSAGE"
  only:
    changes:
      - .gitlab-ci.yml
      - submodules/**/*
      - xmldocumentation/**/*
      - src/App.Api/**/*
      - src/App.Business/**/*
      - src/App.Business.Tests/**/*
      - src/App.Data/**/*
      - src/App.DocumentTemplates/**/*
      - Dockerfile
      - Dockerfile.production
      - "*.sh"
    refs:
      - master

release-image-frontend:
  stage: release
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    MESSAGE: "<b>IPM frontend</b> docker image builded at branch:<b>'$CI_COMMIT_REF_SLUG'</b> ✅\nPush from $GITLAB_USER_EMAIL with commit message: \n$CI_COMMIT_MESSAGE"
    VERSION: 1.0.0
    #RELEASE_FRONTEND_TAG: $CI_REGISTRY_IMAGE/frontend:$VERSION
    RELEASE_FRONTEND_TAG: $HARBOR_URI/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/frontend:$VERSION
  script:
    - apk add --no-cache curl
    #- docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - echo "$HARBOR_PASSWORD" | docker login -u $HARBOR_USER --password-stdin  $HARBOR_URI
    - docker build --build-arg ENVIRONMENT_CONFIGURATION="$CI_COMMIT_REF_SLUG" -t $RELEASE_FRONTEND_TAG ./src/App.View
    - docker push $RELEASE_FRONTEND_TAG
    - sh .ci-notify.sh "$MESSAGE"
  only:
    changes:
      - .gitlab-ci.yml
      - src/App.View/**/*
      - Dockerfile
    refs:
      - master

